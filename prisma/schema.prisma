enum CurrencyType {
  uah
  usd
  eur
}

enum WithdrawalStatus {
  pending
  confirmed
  cancelled
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  password     String
  role         String   @default("user")
  balance_uah  Decimal  @db.Decimal(12, 2) @default(0.00)
  balance_usd  Decimal  @db.Decimal(12, 2) @default(0.00)
  balance_eur  Decimal  @db.Decimal(12, 2) @default(0.00)
  createdAt    DateTime @default(now())

  payments     Payment[]
  withdrawals  Withdrawal[]

  @@map("User")
}

model Payment {
  id         Int           @id @default(autoincrement())
  amount     Decimal       @db.Decimal(12, 2)
  currency   CurrencyType  @default(uah)
  userId     Int
  user       User          @relation(fields: [userId], references: [id])
  projectId  Int?
  createdAt  DateTime      @default(now())

  @@map("Payment")
}

model Withdrawal {
  id          Int              @id @default(autoincrement())
  amount      Decimal          @db.Decimal(12, 2)
  currency    CurrencyType     @default(uah)
  userId      Int
  user        User             @relation(fields: [userId], references: [id])
  createdAt   DateTime         @default(now())
  cardNumber  String
  status      WithdrawalStatus @default(pending)

  @@map("Withdrawal")
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}
